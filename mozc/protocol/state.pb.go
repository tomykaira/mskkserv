// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mozc/protocol/state.proto

/*
Package protocol is a generated protocol buffer package.

It is generated from these files:
	mozc/protocol/state.proto

It has these top-level messages:
	SessionState
*/
package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import commands "github.com/tomykaira/mskkserv/mozc/commands"
import commands2 "github.com/tomykaira/mskkserv/mozc/commands"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SessionState struct {
	// session id
	Id *uint64 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	// session created time
	CreatedTime *uint64 `protobuf:"varint,2,opt,name=created_time,json=createdTime" json:"created_time,omitempty"`
	// whether session is just after commitment
	Committed                 *bool   `protobuf:"varint,3,opt,name=committed,def=0" json:"committed,omitempty"`
	StartPreeditTime          *uint64 `protobuf:"varint,10,opt,name=start_preedit_time,json=startPreeditTime" json:"start_preedit_time,omitempty"`
	StartConversionWindowTime *uint64 `protobuf:"varint,11,opt,name=start_conversion_window_time,json=startConversionWindowTime" json:"start_conversion_window_time,omitempty"`
	StartPredictionWindowTime *uint64 `protobuf:"varint,12,opt,name=start_prediction_window_time,json=startPredictionWindowTime" json:"start_prediction_window_time,omitempty"`
	StartSuggestionWindowTime *uint64 `protobuf:"varint,13,opt,name=start_suggestion_window_time,json=startSuggestionWindowTime" json:"start_suggestion_window_time,omitempty"`
	StartInfolistWindowTime   *uint64 `protobuf:"varint,14,opt,name=start_infolist_window_time,json=startInfolistWindowTime" json:"start_infolist_window_time,omitempty"`
	// last preedit state
	Preedit *commands2.Preedit `protobuf:"bytes,20,opt,name=preedit" json:"preedit,omitempty"`
	// last candidates state
	Candidates *commands.Candidates `protobuf:"bytes,21,opt,name=candidates" json:"candidates,omitempty"`
	// last candidates result
	Result *commands2.Result `protobuf:"bytes,23,opt,name=result" json:"result,omitempty"`
	// last request
	Request          *commands2.Request                `protobuf:"bytes,24,opt,name=request" json:"request,omitempty"`
	InputFieldType   *commands2.Context_InputFieldType `protobuf:"varint,25,opt,name=input_field_type,json=inputFieldType,enum=commands.Context_InputFieldType" json:"input_field_type,omitempty"`
	XXX_unrecognized []byte                            `json:"-"`
}

func (m *SessionState) Reset()                    { *m = SessionState{} }
func (m *SessionState) String() string            { return proto.CompactTextString(m) }
func (*SessionState) ProtoMessage()               {}
func (*SessionState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

const Default_SessionState_Committed bool = false

func (m *SessionState) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *SessionState) GetCreatedTime() uint64 {
	if m != nil && m.CreatedTime != nil {
		return *m.CreatedTime
	}
	return 0
}

func (m *SessionState) GetCommitted() bool {
	if m != nil && m.Committed != nil {
		return *m.Committed
	}
	return Default_SessionState_Committed
}

func (m *SessionState) GetStartPreeditTime() uint64 {
	if m != nil && m.StartPreeditTime != nil {
		return *m.StartPreeditTime
	}
	return 0
}

func (m *SessionState) GetStartConversionWindowTime() uint64 {
	if m != nil && m.StartConversionWindowTime != nil {
		return *m.StartConversionWindowTime
	}
	return 0
}

func (m *SessionState) GetStartPredictionWindowTime() uint64 {
	if m != nil && m.StartPredictionWindowTime != nil {
		return *m.StartPredictionWindowTime
	}
	return 0
}

func (m *SessionState) GetStartSuggestionWindowTime() uint64 {
	if m != nil && m.StartSuggestionWindowTime != nil {
		return *m.StartSuggestionWindowTime
	}
	return 0
}

func (m *SessionState) GetStartInfolistWindowTime() uint64 {
	if m != nil && m.StartInfolistWindowTime != nil {
		return *m.StartInfolistWindowTime
	}
	return 0
}

func (m *SessionState) GetPreedit() *commands2.Preedit {
	if m != nil {
		return m.Preedit
	}
	return nil
}

func (m *SessionState) GetCandidates() *commands.Candidates {
	if m != nil {
		return m.Candidates
	}
	return nil
}

func (m *SessionState) GetResult() *commands2.Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *SessionState) GetRequest() *commands2.Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *SessionState) GetInputFieldType() commands2.Context_InputFieldType {
	if m != nil && m.InputFieldType != nil {
		return *m.InputFieldType
	}
	return commands2.Context_NORMAL
}

func init() {
	proto.RegisterType((*SessionState)(nil), "mozc.protocol.SessionState")
}

func init() { proto.RegisterFile("mozc/protocol/state.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 448 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x93, 0x41, 0x8b, 0xd3, 0x40,
	0x14, 0xc7, 0x49, 0x4d, 0xd7, 0x3a, 0xed, 0x96, 0x18, 0x56, 0x3b, 0x2d, 0x8b, 0x44, 0xbd, 0x04,
	0x56, 0x1b, 0x58, 0x3c, 0xe9, 0x41, 0x70, 0x41, 0xd8, 0x9e, 0x96, 0xe9, 0x82, 0xe0, 0x25, 0x8c,
	0x99, 0xd7, 0x3a, 0x34, 0xc9, 0xc4, 0x99, 0x97, 0xad, 0xf5, 0x33, 0xf9, 0x21, 0x25, 0x93, 0x34,
	0x4d, 0xeb, 0xde, 0x3a, 0xef, 0xff, 0xfb, 0xff, 0xfa, 0x98, 0x21, 0x64, 0x9a, 0xa9, 0x3f, 0x49,
	0x54, 0x68, 0x85, 0x2a, 0x51, 0x69, 0x64, 0x90, 0x23, 0xcc, 0xed, 0xd1, 0x3f, 0xaf, 0xa2, 0xf9,
	0x3e, 0x9a, 0xbd, 0xb2, 0x64, 0xa2, 0xb2, 0x8c, 0xe7, 0xc2, 0x44, 0x09, 0xcf, 0x85, 0x14, 0x1c,
	0xc1, 0xd4, 0xc8, 0xec, 0xf2, 0x24, 0x6f, 0x7e, 0xd4, 0xe9, 0x9b, 0xbf, 0x7d, 0x32, 0x5a, 0x82,
	0x31, 0x52, 0xe5, 0xcb, 0xea, 0x3f, 0xfc, 0x31, 0xe9, 0x49, 0x41, 0x9d, 0xa0, 0x17, 0xba, 0xac,
	0x27, 0x85, 0xff, 0x9a, 0x8c, 0x12, 0x0d, 0x1c, 0x41, 0xc4, 0x28, 0x33, 0xa0, 0xbd, 0xc0, 0x09,
	0x5d, 0x36, 0x6c, 0x66, 0xf7, 0x32, 0x03, 0xff, 0x2d, 0x79, 0x56, 0x59, 0x25, 0x22, 0x08, 0xfa,
	0x24, 0x70, 0xc2, 0xc1, 0xc7, 0xfe, 0x8a, 0xa7, 0x06, 0xd8, 0x61, 0xee, 0xbf, 0x23, 0xbe, 0x41,
	0xae, 0x31, 0x2e, 0x34, 0x80, 0x90, 0x58, 0xdb, 0x88, 0xb5, 0x79, 0x36, 0xb9, 0xab, 0x03, 0xab,
	0xfc, 0x4c, 0x2e, 0x6b, 0x3a, 0x51, 0xf9, 0x03, 0xe8, 0x6a, 0xbd, 0x78, 0x2b, 0x73, 0xa1, 0xb6,
	0x75, 0x6f, 0x68, 0x7b, 0x53, 0xcb, 0xdc, 0xb4, 0xc8, 0x37, 0x4b, 0x1c, 0x0b, 0x0a, 0x0d, 0x42,
	0x26, 0x78, 0x2a, 0x18, 0x75, 0x04, 0x77, 0x2d, 0xf2, 0x98, 0xc0, 0x94, 0xeb, 0x35, 0x98, 0xff,
	0x04, 0xe7, 0x1d, 0xc1, 0xb2, 0x45, 0x3a, 0x82, 0x4f, 0x64, 0x56, 0x0b, 0x64, 0xbe, 0x52, 0xa9,
	0x34, 0x78, 0x54, 0x1f, 0xdb, 0xfa, 0xc4, 0x12, 0xb7, 0x0d, 0xd0, 0x29, 0x5f, 0x91, 0xa7, 0xcd,
	0x3d, 0xd1, 0x8b, 0xc0, 0x09, 0x87, 0xd7, 0xcf, 0xe7, 0xed, 0xc3, 0x35, 0xf7, 0xc4, 0xf6, 0x84,
	0xff, 0x81, 0x90, 0xc3, 0xab, 0xd3, 0x17, 0x96, 0xbf, 0x38, 0xf0, 0x37, 0x6d, 0xc6, 0x3a, 0x9c,
	0x1f, 0x92, 0x33, 0x0d, 0xa6, 0x4c, 0x91, 0x4e, 0x6c, 0xc3, 0x3b, 0x34, 0x98, 0x9d, 0xb3, 0x26,
	0xaf, 0x96, 0xd1, 0xf0, 0xab, 0x04, 0x83, 0x94, 0x9e, 0x2e, 0xc3, 0xea, 0x80, 0xed, 0x09, 0x7f,
	0x41, 0x3c, 0x99, 0x17, 0x25, 0xc6, 0x2b, 0x09, 0xa9, 0x88, 0x71, 0x57, 0x00, 0x9d, 0x06, 0x4e,
	0x38, 0xbe, 0x0e, 0x3a, 0x2b, 0xa9, 0x1c, 0xe1, 0x37, 0xce, 0x6f, 0x2b, 0xf2, 0x6b, 0x05, 0xde,
	0xef, 0x0a, 0x60, 0x63, 0x79, 0x74, 0x5e, 0xb8, 0x03, 0xd7, 0xeb, 0x2f, 0xdc, 0x41, 0xdf, 0x3b,
	0x5b, 0xb8, 0x83, 0x97, 0xde, 0xe4, 0xcb, 0xfb, 0xef, 0x57, 0x6b, 0x89, 0x3f, 0xcb, 0x1f, 0x95,
	0x2b, 0x42, 0x95, 0xed, 0x36, 0x5c, 0x6a, 0x1e, 0x65, 0x66, 0xb3, 0x31, 0xa0, 0x1f, 0xa2, 0xa3,
	0xcf, 0xe6, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x97, 0x1b, 0x00, 0x5e, 0x46, 0x03, 0x00, 0x00,
}
